pipeline {
    agent any

    environment {
        CONDA_ENV = 'capstone_env'
    }

    stages {
        stage('Setup Conda') {
            steps {
                script {
                    def condaBase = sh(script: 'dirname $(dirname $(which conda))', returnStdout: true).trim()
                    sh """
                        source ${condaBase}/etc/profile.d/conda.sh
                        if ! conda env list | grep -q ${CONDA_ENV}; then
                            conda env create -f environment.yml
                        fi
                    """
                }
            }
        stage('Build') {
            steps {
                sh "conda run -n ${CONDA_ENV} conda list"
            }
        }
        stage('Test') {
            steps {
                sh "conda run -n ${CONDA_ENV} pytest"
            }
        }
        stage('Package') {
            when {
                anyOf { branch "main"; branch 'release' }
            }
            steps {
                sh 'zip -r capstone_project.zip lib'
            }
        }
        stage('Release') {
            when {
                branch 'release'
            }
            steps {
                sh "scp -i /home/kudadiri/.ssh/id_rsa -o 'StrictHostKeyChecking no' -r capstone_project.zip log4j.properties main.py project.sh conf kudadiri@172.25.5.7:/home/kudadiri/capstone-qa"
            }
        }
        stage('Deploy') {
            when {
                branch 'main'
            }
            steps {
                sh "scp -i /home/kudadiri/.ssh/id_rsa -o 'StrictHostKeyChecking no' -r capstone_project.zip log4j.properties main.py project.sh conf kudadiri@172.25.5.7:/home/kudadiri/capstone-prod"
            }
        }
    }
}